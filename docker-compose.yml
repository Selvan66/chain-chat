services:
  build:
    build:
      context: "."
      target: "build"
      args:
          - "DATABASE_URL=${DATABASE_URL:-mysql://${MYSQL_USER:-user}:${MYSQL_PASSWORD:-password}@${MYSQL_HOST:-localhost}:${MYSQL_PORT:-3306}/${MYSQL_DATABASE:-mydb}}"
    depends_on:
      mysql:
        condition: "service_started"
        required: false
      redis:
        condition: "service_started"
        required: false
    env_file:
      - ".env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "0"
    tty: true
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_BUILD_CPUS:-0}"
          memory: "${DOCKER_BUILD_MEMORY:-0}"
    ports:
      - 8000:8000
    profiles: ["build"]
    networks:
      - back-end

  app:
    build:
      context: "."
      target: "app"
      args:
        - "APP_ENVIRONMENT=${APP_ENVIRONMENT:-production}"
    depends_on:
      - build
    env_file:
      - ".env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    tty: true
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:8000/health_check}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-8000}:${PORT:-8000}"
    profiles: ["app"]

networks:
  back-end:
